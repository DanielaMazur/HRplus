"""empty message

Revision ID: 327ce73a778f
Revises: 
Create Date: 2021-10-30 12:07:55.547193

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '327ce73a778f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('replacement_cost',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('advertising_fees_per_termination', sa.Float(), nullable=False),
    sa.Column('job_availability_communication_time', sa.Float(), nullable=False),
    sa.Column('preemployeement_admin_fun_time', sa.Float(), nullable=False),
    sa.Column('interview_time', sa.Float(), nullable=False),
    sa.Column('number_of_interviews', sa.Integer(), nullable=False),
    sa.Column('cost_of_materials_per_person', sa.Float(), nullable=False),
    sa.Column('cost_of_scoring_per_person', sa.Float(), nullable=False),
    sa.Column('number_of_test_given', sa.Integer(), nullable=False),
    sa.Column('acquiring_and_disseminating_time', sa.Float(), nullable=False),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('training',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('informational_package_cost', sa.Float(), nullable=False),
    sa.Column('training_program_length', sa.Float(), nullable=False),
    sa.Column('avg_trainers_pay_rate', sa.Float(), nullable=False),
    sa.Column('instruction_hours', sa.Float(), nullable=False),
    sa.Column('experienced_employees_assigned', sa.Float(), nullable=False),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('wage', sa.Float(), nullable=False),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('work_hours', sa.Float(), nullable=True),
    sa.Column('managed_by_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('replacement_for_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['managed_by_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['replacement_for_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('calendar',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('employee_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('worked_hours', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('employee_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('meeting_notes', sa.String(length=1000), nullable=True),
    sa.Column('is_interview', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('turnover',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('meeting_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('employee_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('turnover')
    op.drop_table('meeting')
    op.drop_table('calendar')
    op.drop_table('employee')
    op.drop_table('training')
    op.drop_table('role')
    op.drop_table('replacement_cost')
    op.drop_table('company')
    # ### end Alembic commands ###
